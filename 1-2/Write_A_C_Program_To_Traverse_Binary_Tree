
 //binary tree traversal

	#include<stdio.h>
	#include<conio.h>
	#include<stdlib.h>

	struct node
	{
		int data;
		struct node *left;
		struct node *right;
	};

	struct node *newnode(int data)
	{
		struct node *node=(struct node *)malloc(sizeof(struct node));
		node->data=data;
		node->left=NULL;
		node->right=NULL;
		return(node);
	}

	int printpostorder(struct node *node)
	{
		if(node==NULL)
			return 0;
		printpostorder(node->left);
		printpostorder(node->right);
		printf("%d",node->data);
		return 0;
	}

	int printinorder(struct node *node)
	{
		if(node==NULL)
			return 0;
		printinorder(node->left);
		printf("%d",node->data);
		printinorder(node->right);
		return 0;
	}

	int printpreorder(struct node *node)
	{
		if(node==NULL)
			return 0;
		printf("%d",node->data);
		printpreorder(node->left);
		printpreorder(node->right);
		return 0;
	}

	int main()
	{
		struct node *root=newnode(1);
		root->left=newnode(2);
		root->left->left=newnode(3);
		root->right=newnode(4);
		root->right->left=newnode(5);
		printf("\n preorder traversal of binary tree is\n");
		printpreorder(root);
		printf("\n inorder traversal of binary tree is\n");
		printinorder(root);
		printf("\n postorder traversal of binary tree is\n");
		printpostorder(root);
		return 0;
	}

