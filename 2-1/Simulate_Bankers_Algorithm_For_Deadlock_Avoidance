
 #include<stdio.h>
	#include<conio.h>

	int max[10][10],alloc[10][10],need[10][10],avail[10],n,r;
	void input();	
	void show();
	void cal();

	int main()
	{
		int i,j;
		clrscr();
		input();
		show();
		cal();
		getch();
		return 0;
	}

	void input()
	{
		int i,j;
		printf("\n Enter the no of processes: ");
		scanf("%d",&n);
		printf("\n Enter the no of resource instances: ");
		scanf("%d",&r);
		printf("\n Enter the Max matrix: ");
		for(i=0;i<n;i++)
		{
			for(j=0;j<r;j++)
			{
				scanf("%d",&max[i][j]);
			}
		}
		printf("\n Enter the allocation matrix: ");
		for(i=0;i<n;i++)
		{
			for(j=0;j<r;j++)
			{
				scanf("%d",&alloc[i][j]);
			}
		}

		printf("\n Enter the available Resources: ");
		for(j=0;j<r;j++)
		{
			scanf("%d",&avail[j]);
		}

	}

	void show()
	{
		int i,j;
		printf("\n process\t Allocation\t Max \t Available");
		for(i=0;i<n;i++)
		{
			printf("\nP%d \t ",i+1);
			for(j=0;j<r;j++)
			{
				printf("%d ", alloc[i][j]);
			}
			printf("\t");

			for(j=0;j<r;j++)
			{
				printf("%d ",max[i][j]);
			}
			printf("\t");

			if(i==0)
			{
				for(j=0;j<r;j++)
					printf("%d ",avail[j]);
			}
		}
	}

	void cal()
	{
		int finish[10],temp,need[10][10],flag=1,k,c1=0,safe[10],i,j;
		for(i=0;i<n;i++)
		{
			finish[i]=0;
		}
		for(i=0;i<n;i++)
		{
			for(j=0;j<r;j++)
			{
				need[i][j]=max[i][j]-alloc[i][j];
			}
		}

		printf("\n");
		while(flag)
		{
			flag=0;
			for(i=0;i<n;i++)
			{
				int c=0;
				for(j=0;j<r;j++)
				{
					if((finish[i]==0)&&(need[i][j]<=avail[j]))
					{
						c++;
						if(c==r)
						{
							for(k=0;k<r;k++)
							{
								avail[k]+=alloc[i][j];
								finish[i]=1;
								flag=1;
							}
							printf("P%d-->",i);

							if(finish[i]==1)
							{
								i=n;
							}
						}
					}
				}
				for(i=0;i<n;i++)
				{
					if(finish[i]==1)
					{
						c1++;
					}
					else
					{
						printf("P%d--> ",i);
					}
				}

				if(c1==n)
				{
					printf("\n The system is in safe state....");
				}
				else
				{
					printf("\n The system is in unsafe state.... So deadlock will occur...");
				}
			}
		}
	}

